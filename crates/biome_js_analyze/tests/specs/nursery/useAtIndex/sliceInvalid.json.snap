---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 86
expression: sliceInvalid.json
---
# Input
```cjs
array.slice(0)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(0)[0]
      │ ^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(0)[0]
  + array.at(0)
  

```

# Input
```cjs
array.slice(-0)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-0)[0]
      │ ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-0)[0]
  + array.at(-0)
  

```

# Input
```cjs
array.slice(-1)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-1)[0]
      │ ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-1)[0]
  + array.at(-1)
  

```

# Input
```cjs
array.slice(-1).pop()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-1).pop()
      │ ^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-1) over X.slice(-a).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-1).pop()
  + array.at(-1)
  

```

# Input
```cjs
array.slice(-1.0).shift()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-1.0).shift()
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y).shift().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-1.0).shift()
  + array.at(-1.0)
  

```

# Input
```cjs
array.slice(-9)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9)[0]
      │ ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9)[0]
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-0xA)[0b000]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-0xA)[0b000]
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-0xA)[0b000]
  + array.at(-0xA)
  

```

# Input
```cjs
array.slice(-9).shift()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9).shift()
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y).shift().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9).shift()
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-1)[(( 0 ))];
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-1)[(( 0 ))];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-1)[((·0·))];
  + array.at(-1);
  

```

# Input
```cjs
array.slice(-(( 1 )))[0];
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-(( 1 )))[0];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-((·1·)))[0];
  + array.at(-((·1·)));
  

```

# Input
```cjs
array.slice((( -1 )))[0];
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice((( -1 )))[0];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(((·-1·)))[0];
  + array.at(-1);
  

```

# Input
```cjs
(( array.slice(-1) ))[0];
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-1) ))[0];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-1)·))[0];
  + array.at(-1);
  

```

# Input
```cjs
(( array )).slice(-1)[0];
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array )).slice(-1)[0];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array·)).slice(-1)[0];
  + ((·array·)).at(-1);
  

```

# Input
```cjs
(( array.slice(-1)[0] ));
```

# Diagnostics
```
sliceInvalid.json:1:4 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-1)[0] ));
      │    ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-1)[0]·));
  + ((·array.at(-1)·));
  

```

# Input
```cjs
(( array.slice(-1) )).pop();
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-1) )).pop();
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-1) over X.slice(-a).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-1)·)).pop();
  + array.at(-1);
  

```

# Input
```cjs
(( array.slice(-1).pop ))();
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-1).pop ))();
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-1) over X.slice(-a).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-1).pop·))();
  + array.at(-1);
  

```

# Input
```cjs
(( array.slice(-1).pop() ));
```

# Diagnostics
```
sliceInvalid.json:1:4 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-1).pop() ));
      │    ^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-1) over X.slice(-a).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-1).pop()·));
  + ((·array.at(-1)·));
  

```

# Input
```cjs
array.slice(-1)[0].pop().shift().slice(-1)
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-1)[0].pop().shift().slice(-1)
      │ ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-1)[0].pop().shift().slice(-1)
  + array.at(-1).pop().shift().slice(-1)
  

```

# Input
```cjs
array.slice(-9, -8)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9, -8)[0]
      │ ^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9,·-8)[0]
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-9, -0o10)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9, -0o10)[0]
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9,·-0o10)[0]
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-9, -8).pop()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9, -8).pop()
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y - 1) over X.slice(a, Y).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9,·-8).pop()
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-9, -8).shift()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9, -8).shift()
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a).shift().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9,·-8).shift()
  + array.at(-9)
  

```

# Input
```cjs
array.slice((( -9 )), (( -8 )), ).shift()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice((( -9 )), (( -8 )), ).shift()
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a).shift().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(((·-9·)),·((·-8·)),·).shift()
  + array.at(-9)
  

```

# Input
```cjs
(( array.slice(-9, -8).shift ))()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array.slice(-9, -8).shift ))()
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a).shift().
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array.slice(-9,·-8).shift·))()
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-0o11, -7)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-0o11, -7)[0]
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-0o11,·-7)[0]
  + array.at(-0o11)
  

```

# Input
```cjs
array.slice(-9, 0)[0]
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-9, 0)[0]
      │ ^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.slice(Y, a)[0].
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-9,·0)[0]
  + array.at(-9)
  

```

# Input
```cjs
array.slice(-4).pop()
```

# Diagnostics
```
sliceInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array.slice(-4).pop()
      │ ^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-1) over X.slice(-a).pop().
  
  i Unsafe fix: Replace index references with .at().
  
  - array.slice(-4).pop()
  + array.at(-1)
  

```
