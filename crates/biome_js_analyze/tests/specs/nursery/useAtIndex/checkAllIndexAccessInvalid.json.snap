---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 86
expression: checkAllIndexAccessInvalid.json
---
# Input
```cjs
array[0]
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[0]
      │ ^^^^^^^^
  
  i Prefer X.at(Y) over X[Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[0]
  + array.at(0)
  

```

# Input
```cjs
array[1]
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[1]
      │ ^^^^^^^^
  
  i Prefer X.at(Y) over X[Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[1]
  + array.at(1)
  

```

# Input
```cjs
array[5 + 9]
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[5 + 9]
      │ ^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[5·+·9]
  + array.at(5·+·9)
  

```

# Input
```cjs
const offset = 5;array[offset + 9]
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:18 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ const offset = 5;array[offset + 9]
      │                  ^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - const·offset·=·5;array[offset·+·9]
  + const·offset·=·5;array.at(offset·+·9)
  

```

# Input
```cjs
array[array.length - 1]
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 1]
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·1]
  + array.at(-1)
  

```

# Input
```cjs
string.charAt(9)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(9)
      │ ^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(9)
  + string.at(9)
  

```

# Input
```cjs
string.charAt(5 + 9)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(5 + 9)
      │ ^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(5·+·9)
  + string.at(5·+·9)
  

```

# Input
```cjs
const offset = 5;string.charAt(offset + 9)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:18 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ const offset = 5;string.charAt(offset + 9)
      │                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - const·offset·=·5;string.charAt(offset·+·9)
  + const·offset·=·5;string.at(offset·+·9)
  

```

# Input
```cjs
string.charAt(unknown)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(unknown)
      │ ^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(unknown)
  + string.at(unknown)
  

```

# Input
```cjs
string.charAt(-1)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(-1)
      │ ^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(-1)
  + string.at(-1)
  

```

# Input
```cjs
string.charAt(1.5)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(1.5)
      │ ^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(1.5)
  + string.at(1.5)
  

```

# Input
```cjs
string.charAt(1n)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(1n)
      │ ^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(1n)
  + string.at(1n)
  

```

# Input
```cjs
string.charAt(string.length - 1)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ string.charAt(string.length - 1)
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X.charAt(X.length - Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - string.charAt(string.length·-·1)
  + string.at(-1)
  

```

# Input
```cjs
foo.charAt(bar.length - 1)
```

# Diagnostics
```
checkAllIndexAccessInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ foo.charAt(bar.length - 1)
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(Y) over X.charAt(Y).
  
  i Unsafe fix: Replace index references with .at().
  
  - foo.charAt(bar.length·-·1)
  + foo.at(bar.length·-·1)
  

```
