---
source: crates/biome_js_analyze/tests/spec_tests.rs
assertion_line: 86
expression: indexInvalid.json
---
# Input
```cjs
array[array.length - 1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·1];
  + array.at(-1);
  

```

# Input
```cjs
array[array.length -1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length -1];
      │ ^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-1];
  + array.at(-1);
  

```

# Input
```cjs
array[array.length - /* comment */ 1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - /* comment */ 1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·/*·comment·*/·1];
  + array.at(-1);
  

```

# Input
```cjs
array[array.length - 1.];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 1.];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·1.];
  + array.at(-1.);
  

```

# Input
```cjs
array[array.length - 0b1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 0b1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·0b1];
  + array.at(-0b1);
  

```

# Input
```cjs
array[array.length - 9];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 9];
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·9];
  + array.at(-9);
  

```

# Input
```cjs
array[0][array[0].length - 1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[0][array[0].length - 1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[0][array[0].length·-·1];
  + array[0].at(-1);
  

```

# Input
```cjs
array[(( array.length )) - 1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[(( array.length )) - 1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[((·array.length·))·-·1];
  + array.at(-1);
  

```

# Input
```cjs
array[array.length - (( 1 ))];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - (( 1 ))];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·((·1·))];
  + array.at(-1·);
  

```

# Input
```cjs
array[(( array.length - 1 ))];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[(( array.length - 1 ))];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[((·array.length·-·1·))];
  + array.at(-1·);
  

```

# Input
```cjs
(( array ))[array.length - 1];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array ))[array.length - 1];
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array·))[array.length·-·1];
  + ((·array·)).at(-1);
  

```

# Input
```cjs
(( array[array.length - 1] ));
```

# Diagnostics
```
indexInvalid.json:1:4 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ (( array[array.length - 1] ));
      │    ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - ((·array[array.length·-·1]·));
  + ((·array.at(-1)·));
  

```

# Input
```cjs
array[array.length - 1].pop().shift()[0];
```

# Diagnostics
```
indexInvalid.json:1:1 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ array[array.length - 1].pop().shift()[0];
      │ ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - array[array.length·-·1].pop().shift()[0];
  + array.at(-1).pop().shift()[0];
  

```

# Input
```cjs
a = array[array.length - 1]
```

# Diagnostics
```
indexInvalid.json:1:5 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ a = array[array.length - 1]
      │     ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - a·=·array[array.length·-·1]
  + a·=·array.at(-1)
  

```

# Input
```cjs
const a = array[array.length - 1]
```

# Diagnostics
```
indexInvalid.json:1:11 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ const a = array[array.length - 1]
      │           ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - const·a·=·array[array.length·-·1]
  + const·a·=·array.at(-1)
  

```

# Input
```cjs
const {a = array[array.length - 1]} = {}
```

# Diagnostics
```
indexInvalid.json:1:12 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ const {a = array[array.length - 1]} = {}
      │            ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - const·{a·=·array[array.length·-·1]}·=·{}
  + const·{a·=·array.at(-1)}·=·{}
  

```

# Input
```cjs
typeof array[array.length - 1]
```

# Diagnostics
```
indexInvalid.json:1:8 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ typeof array[array.length - 1]
      │        ^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - typeof·array[array.length·-·1]
  + typeof·array.at(-1)
  

```

# Input
```cjs
function foo() {return arguments[arguments.length - 1]}
```

# Diagnostics
```
indexInvalid.json:1:24 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ function foo() {return arguments[arguments.length - 1]}
      │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - function·foo()·{return·arguments[arguments.length·-·1]}
  + function·foo()·{return·arguments.at(-1)}
  

```

# Input
```cjs
class Foo {bar; baz() {return this.bar[this.bar.length - 1]}}
```

# Diagnostics
```
indexInvalid.json:1:31 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ class Foo {bar; baz() {return this.bar[this.bar.length - 1]}}
      │                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - class·Foo·{bar;·baz()·{return·this.bar[this.bar.length·-·1]}}
  + class·Foo·{bar;·baz()·{return·this.bar.at(-1)}}
  

```

# Input
```cjs
class Foo {#bar; baz() {return this.#bar[this.#bar.length - 1]}}
```

# Diagnostics
```
indexInvalid.json:1:32 lint/nursery/useAtIndex  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Replace index references with .at().
  
  > 1 │ class Foo {#bar; baz() {return this.#bar[this.#bar.length - 1]}}
      │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  
  i Prefer X.at(-Y) over X[X.length - Y].
  
  i Unsafe fix: Replace index references with .at().
  
  - class·Foo·{#bar;·baz()·{return·this.#bar[this.#bar.length·-·1]}}
  + class·Foo·{#bar;·baz()·{return·this.#bar.at(-1)}}
  

```
